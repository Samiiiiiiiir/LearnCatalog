.form {
  display: grid;
  grid-template-columns: minmax(auto, 9.25rem) auto 1fr 1fr;
  gap: 2rem 1.875rem;
  align-items: start;

  padding-top: 1.5rem;

  @media screen and (width <= 1024px) {
    gap: 1.75rem 1rem;
  }

  @media screen and (width <= 640px) {
    grid-template-columns: 1fr;
  }
}

.rating {
  position: relative;

  display: grid;
  grid-template-columns: auto 1fr;
  gap: 0.375rem;
  place-self: center end;

  .inputError {
    grid-column: 1 / -1;
  }

  @media screen and (width <= 1024px) {
    grid-column: 1 / -1;
    justify-self: start;
  }

  @media screen and (width <= 640px) {
    justify-self: stretch;
  }
}

.textLabel {
  grid-column: 1 / -1;
  min-height: 5rem;

  @media screen and (width <= 1024px) {
    min-height: auto;
  }
}

.notice {
  grid-column: 2 / -1;
  align-self: center;

  @media screen and (width <= 1024px) {
    font-size: 0.875rem;
  }

  @media screen and (width <= 640px) {
    grid-column: 1 / -1;
  }
}

.nameLabel {
  grid-column: 1 / 3;
  max-width: 15rem;

  @media screen and (width <= 640px) {
    grid-column: 1 / -1;
    max-width: 100%;
  }
}

.label {
  position: relative;
  display: grid;
}

.errorMessage {
  position: absolute;
  bottom: -1.625rem;
  left: 0;
  color: var(--color-red);

  @media screen and (width <= 1024px) {
    bottom: -1.375rem;
    font-size: 0.875rem;
  }
}

.fieldError {
  outline: 0.0625rem solid var(--color-red) !important;
}

.ratingError {
  svg {
    stroke: var(--color-red);
  }
}

.statusBlock {
  position: relative;

  display: grid;
  grid-column: 1 / -1;
  gap: 0.25rem;
  justify-self: start;

  width: 100%;
  margin-top: 1.5rem;
  padding: 1rem 1rem 1.5rem;

  font-weight: 500;
}

.closeBtn {
  cursor: pointer;

  position: absolute;
  top: 0.875rem;
  right: 0.875rem;

  display: flex;
  align-items: center;
  justify-content: center;

  padding: 0.125rem;
}

.statusSuccess {
  color: var(--color-green);
  background-color: var(--color-green-light);

  path {
    stroke: var(--color-green);
    stroke-width: 3;
  }
}

.statusError {
  color: var(--color-red);
  background-color: #ffbcbc;

  path {
    stroke: var(--color-red);
    stroke-width: 3;
  }
}

.sendButton {
  &:disabled {
    cursor: default;

    &:hover {
      border-color: var(--color-light);
      color: var(--color-light);
      background-color: var(--color-primary);
    }
  }
}
